---
- name: Machine setup
  hosts: localhost
  become: true
  connection: local
  gather_facts: true
  vars:
    docker_apt_arch: "{{ 'arm64' if ansible_architecture == 'aarch64' else 'amd64' }}"
    docker_repo_url: https://download.docker.com/linux
    docker_apt_release_channel: stable
    docker_apt_ansible_distribution: "{{ 'ubuntu' if ansible_distribution in ['Pop!_OS', 'Linux Mint'] else ansible_distribution }}"
    docker_apt_repository: "deb [arch={{ docker_apt_arch }}] {{ docker_repo_url }}/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} {{ docker_apt_release_channel }}"
    docker_apt_repository: "deb [arch={{ docker_apt_arch }} signed-by=/usr/share/keyrings/docker.asc] {{ docker_repo_url }}/{{ docker_apt_ansible_distribution | lower }} {{ ansible_distribution_release }} {{ docker_apt_release_channel }}"

  tasks:
    - name: Get my user
      ansible.builtin.set_fact:
        remote_regular_user: "{{ ansible_env.SUDO_USER or ansible_user_id }}"

    - name: Install packages
      ansible.builtin.package:
        name:
          - git
          - htop
          - vim
          - firefox
          - zsh
          - tmux
        state: present

    - name: Change shell to zsh
      ansible.builtin.user:
        name: "{{ remote_regular_user }}"
        shell: /usr/bin/zsh


    - name: Import Brave Browser GPG Key
      ansible.builtin.get_url:
        url: https://brave-browser-apt-release.s3.brave.com/brave-browser-archive-keyring.gpg
        dest: /usr/share/keyrings/brave-browser-archive-keyring.gpg
      when: ansible_os_family == 'Debian'


    - name: Add Brave Browser Repo (deb)
      ansible.builtin.apt_repository:
        repo: deb [signed-by=/usr/share/keyrings/brave-browser-archive-keyring.gpg] https://brave-browser-apt-release.s3.brave.com/ stable main
        state: present
      become: true  
      when: ansible_os_family == 'Debian'

    - name: Add Brave Browser Repo (yum)
      ansible.builtin.yum_repository:
        name: brave-browser
        description: Brave Browser
        baseurl: https://brave-browser-rpm-release.s3.brave.com/x86_64/
        gpgkey: https://brave-browser-rpm-release.s3.brave.com/brave-core.asc
        gpgcheck: true
        enabled: true
      when: ansible_os_family == 'RedHat'


    - name: Import Brave Browser GPG Key
      ansible.builtin.rpm_key:
        key: https://brave-browser-rpm-release.s3.brave.com/brave-core.asc
        state: present
      when: ansible_os_family == 'RedHat'

    - name: Install Brave Browser
      ansible.builtin.package:
        name: brave-browser
        state: present

# curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gp
    - name: Import Microsoft GPG Key
      ansible.builtin.get_url:
        url: https://packages.microsoft.com/keys/microsoft.asc 
        dest: /usr/share/keyrings/microsoft.asc
      when: ansible_os_family == 'Debian'

    - name: Import Microsoft GPG Key
      ansible.builtin.rpm_key:
        key: https://packages.microsoft.com/keys/microsoft.asc
        state: present
      when: ansible_os_family == 'RedHat'

    - name: Add Visual Studio Code Repo (deb)
      ansible.builtin.apt_repository:
        repo: deb [arch=amd64,arm64,armhf signed-by=/usr/share/keyrings/microsoft.asc] https://packages.microsoft.com/repos/code stable main
        state: present
      when: ansible_os_family == 'Debian'

    - name: Add Visual Studio Code Repo (yum)
      ansible.builtin.yum_repository:
        name: vscode
        description: Visual Studio Code
        baseurl: https://packages.microsoft.com/yumrepos/vscode
        gpgkey: https://packages.microsoft.com/keys/microsoft.asc
        gpgcheck: true
        enabled: true
      when: ansible_os_family == 'RedHat'

    - name: Install VS Code
      ansible.builtin.package:
        name: code
        state: present


    - name: Import Docker GPG Key
      ansible.builtin.get_url:
        url: https://download.docker.com/linux/ubuntu/gpg 
        dest: /usr/share/keyrings/docker.asc
      when: ansible_os_family == 'Debian'

    - name: Add Docker Repo (deb)
      ansible.builtin.apt_repository:
        repo: "{{ docker_apt_repository }}"
        state: present
      when: ansible_os_family == 'Debian'

    - name: Add Docker repo
      ansible.builtin.yum_repository:
        name: docker
        description: Docker repo
        baseurl: "https://download.docker.com/linux/fedora/{{ ansible_distribution_major_version }}/{{ ansible_architecture }}/stable"
        gpgkey: "https://download.docker.com/linux/fedora/gpg"
        gpgcheck: true
        enabled: true
      when: ansible_os_family == 'RedHat'

    - name: Install Docker
      ansible.builtin.package:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present

    - name: Add Docker group
      ansible.builtin.group:
        name: docker
        state: present

    - name: Add user to docker group
      ansible.builtin.user:
        name: "{{ remote_regular_user }}"
        groups: docker
        append: true

  
    # - name: Add kubectl repo
    #   ansible.builtin.yum_repository:
    #     name: Kubernetes
    #     description: Kubernetes repo
    #     baseurl: https://pkgs.k8s.io/core:/stable:/v1.28/rpm/
    #     gpgkey: https://pkgs.k8s.io/core:/stable:/v1.28/rpm/repodata/repomd.xml.key
    #     gpgcheck: true
    #     enabled: true

    # - name: Install kubectl
    #   ansible.builtin.dnf:
    #     name: kubectl
    #     state: present

    # - name: Add Hashicorp Repo
    #   ansible.builtin.yum_repository:
    #     name: hashicorp
    #     description: Hashicorp repo
    #     baseurl: https://rpm.releases.hashicorp.com/fedora/$releasever/$basearch/stable
    #     gpgkey: https://rpm.releases.hashicorp.com/gpg
    #     gpgcheck: true
    #     enabled: true

    # - name: Install Terraform
    #   ansible.builtin.dnf:
    #     name: terraform
    #     state: present

  
    # - name: Install Flatpak packages
    #   community.general.flatpak:
    #     name:
    #       - com.obsproject.Studio
    #       - org.videolan.VLC
    #       - org.tenacityaudio.Tenacity
    #       - md.obsidian.Obsidian
    #       - org.gimp.GIMP
    #       - rest.insomnia.Insomnia
    #       - com.github.johnfactotum.Foliate
    #       - org.gnome.meld
    #       - org.sqlitebrowser.sqlitebrowser
    #     state: present

    - name: Ensure fonts directory
      ansible.builtin.file:
        path: "~{{ remote_regular_user }}/.fonts"
        state: directory
        mode: "0755"
        owner: "{{ remote_regular_user }}"

    - name: Check if Jetbrains Mono exists
      ansible.builtin.shell: "ls ~{{ remote_regular_user }}/.fonts/JetBrainsMonoNerd*FontMono*"
      register: jetbrains_mono_exists
      ignore_errors: true
      changed_when: false

    - name: Download Jetbrains mono
      when: jetbrains_mono_exists is failed
      ansible.builtin.unarchive:
        src: https://github.com/ryanoasis/nerd-fonts/releases/download/v3.1.1/JetBrainsMono.zip
        dest: "~{{ remote_regular_user }}/.fonts/"
        remote_src: true
        mode: "0755"
        owner: "{{ remote_regular_user }}"
